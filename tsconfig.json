{
  "compilerOptions": {
    /* Visit https://www.typescriptlang.org/tsconfig to read more about this file and the options below.
     * You can jump to specific options by adding the key to the end of this url: https://www.typescriptlang.org/tsconfig#
     * For example, https://www.typescriptlang.org/tsconfig#incremental
     */
    "incremental": true /* Enable incremental compilation. */,
    "composite": true /* Enable constraints that allow a TypeScript project to be used with project references. */,
    "target": "es2016" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,
    "experimentalDecorators": true /* Enable experimental support for TC39 stage 2 draft decorators. */,
    "emitDecoratorMetadata": true /* Emit design-type metadata for decorated declarations in source files. */,
    "module": "esnext" /* Specify what module code is generated. */,
    "moduleResolution": "node" /* Specify how TypeScript looks up a file from a given module specifier. */,
    "esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables `allowSyntheticDefaultImports` for type compatibility. */,
    "forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,
    "strict": true /* Enable all strict type-checking options. */,
    "skipLibCheck": true /* Skip type checking all .d.ts files. */,
    "isolatedModules": true /* Warns if there is code that can't be interpreted by a single-file transpilation process that depend on understanding the full type system. */,
    "allowSyntheticDefaultImports": true /* Allow default-type imports from modules that don't explicitly specify a default export. */,
    "allowJs": true /* Allows JS files to be imported instead of just TS files. */,
    "jsx": "react" /* Controls how JSX constructs are emitted in JavaScript files. */,
    "resolveJsonModule": true /* Allows importing modules with a .json extension, which we need for l10n files. */,
    "outDir": "dist",
    "sourceMap": true
  },
  "include": [
    "./src/**/*",
    "./src/**/*.json"
  ]
}
